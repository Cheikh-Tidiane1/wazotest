/// <reference types="node" />
import EventEmitter from 'events';
import { SoftphoneInitArguments, Call, WDASession, Card, CallLog, IframeCss } from './types.js';
export declare const SHOW = "show";
export declare const HIDE = "hide";
type Message = [string, Object];
declare class Softphone extends EventEmitter {
    url: string;
    width: number;
    height: number;
    iframeCss: IframeCss;
    displayed: boolean;
    wrapper: HTMLDivElement | null;
    iframe: HTMLIFrameElement | null;
    iframeLoaded: boolean;
    session: WDASession | null;
    _pendingMessages: Message[];
    onLinkEnabled(link: HTMLLinkElement): void;
    onIFrameLoaded(): void;
    onCallLocallyAnswered(call: Call): void;
    onCallEstablished(call: Call): void;
    onOutgoingCallMade(call: Call): void;
    onCallIncoming(call: Call): void;
    onCallRejected(call: Call): void;
    onCallEnded(call: Call, card: Card, direction: string, fromExtension: string): void;
    onCardSaved(card: Card): void;
    onCardCanceled(): void;
    onAuthenticated(session: WDASession): void;
    onLoggedOut(): void;
    onSearchOptions(fieldId: string, query: string): void;
    onDisplayLinkedOption(optionId: string): void;
    onWazoContactSearch(query: string): void;
    onAgentLoggedIn(): void;
    onAgentLoggedOut(): void;
    onAgentPaused(): void;
    onAgentResumed(): void;
    onLanguageChanged(language: string): void;
    onCallHeld(): void;
    onCallResumed(): void;
    onCallMuted(): void;
    onCallUnMuted(): void;
    onDtmfSent(tone: string): void;
    onDirectTransfer(number: string): void;
    onCreateIndirectTransfer(number: string): void;
    onCancelIndirectTransfer(): void;
    onConfirmIndirectTransfer(): void;
    onIndirectCallMade(call: Call): void;
    onIndirectTransferDone(call: Call): void;
    onStartRecording(): void;
    onStopRecording(): void;
    onCallLogCreated(callLog: CallLog): void;
    onWebsocketMessage(message: Object): void;
    onUnHandledEvent(event: Object): void;
    init({ url, width, height, server, port, language, wrapUpDuration, iframeCss, enableAgent, tenantId, domainName, debug, disableAutoLogin, }: SoftphoneInitArguments): void;
    parseLinks(): void;
    removeParsedLinksEvent(): void;
    makeCall(number: string): void;
    toggleDisplay(): void;
    show(): void;
    hide(): void;
    remove(): void;
    optionsFetched(fieldId: string, options: any[]): void;
    onOptionsResults(fieldId: string, options: any[]): void;
    setFormSchema(schema: Object, uiSchema: Object): void;
    setCardValue(field: string, value: any): void;
    injectCss(css: string): void;
    customizeAppearance(themes: Object, translations: Object, assets: Object): void;
    loginWithToken(token: string, refreshToken?: string): void;
    configureServer(server: string): void;
    updateCss(iframeCss?: IframeCss | null): void;
    _createIframe(cb?: ((this: GlobalEventHandlers, ev: Event) => any) | null): void;
    _getLinks(): never[];
    _onLinkClick(e: Event): void;
    _onAuthenticated(session: WDASession): void;
    _onMessage(event: MessageEvent): void;
    _sendMessage(type: string, payload?: Object): void;
}
declare const _default: Softphone;
export default _default;
//# sourceMappingURL=softphone.d.ts.map